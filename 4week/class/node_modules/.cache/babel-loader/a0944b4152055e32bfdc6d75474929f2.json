{"ast":null,"code":"// action type\nimport axios from \"axios\";\nexport var REQUEST_CONTENTS = \"REQUEST_CONTENTS\";\nexport var RECEIVE_CONTENTS = \"RECEIVE_CONTENTS\";\nexport var CHANGE_FULL_CONTENT = \"CHANGE_FULL_CONTENT\"; // active creator(액션 생성자)\n\nvar requestContents = function requestContents() {\n  return {\n    type: REQUEST_CONTENTS\n  };\n};\n\nvar receiveContents = function receiveContents(content) {\n  return {\n    type: RECEIVE_CONTENTS,\n    contents: content,\n    receiveAt: Date.now()\n  };\n};\n\nexport var changeFullContent = function changeFullContent(content) {\n  return {\n    type: CHANGE_FULL_CONTENT,\n    content: content\n  };\n}; //비도기 action(async action)\n\nexport var fetchContents = function fetchContents() {\n  return function (dispatch) {\n    dispatch(requestContents()); //디스패치로 액션함수를 실행시키는것\n\n    return API().then(function (_ref) {\n      var data = _ref.data;\n      return setContents(data);\n    }).then(function (contents) {\n      //then->비동기함수가 끝나고나서 바로 실행시키는것.순차적으로.\n      dispatch(changeFullContent(contents[0]));\n      dispatch(receiveContents(contents.slice(1, contents.length))); //액션을 실행시키려면 무조건 디스패치를 실행시켜야함.기존의 셋스테이트랑 비슷.변경된 사항을 스토어에 보내주는것 receiveContents\n    });\n  };\n};\n\nvar API = function API(_ref2) {\n  var _ref2$token = _ref2.token,\n      token = _ref2$token === void 0 ? \"\" : _ref2$token,\n      _ref2$maxResults = _ref2.maxResults,\n      maxResults = _ref2$maxResults === void 0 ? 30 : _ref2$maxResults;\n  var URL = \"https://www.googleapis.com/youtube/v3/\";\n  var api = URL + \"videos?part=snippet&chart=mostPopular&key=\".concat(token, \"&maxResults=\").concat(maxResults);\n  return axios.get(api);\n};\n\nvar setContents = function setContents(data) {\n  var list = [];\n  console.log(data);\n  data.items.forEach(function (item, index) {\n    list.push({\n      id: item.id,\n      name: item.snippet.title\n    });\n  });\n  return list;\n};\n\nvar token = 'AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg';\nvar maxResults = 30;","map":{"version":3,"sources":["/Users/JYP/Desktop/react-study/awesome-react-student/4week/class/src/actions.js"],"names":["axios","REQUEST_CONTENTS","RECEIVE_CONTENTS","CHANGE_FULL_CONTENT","requestContents","type","receiveContents","content","contents","receiveAt","Date","now","changeFullContent","fetchContents","dispatch","API","then","data","setContents","slice","length","token","maxResults","URL","api","get","list","console","log","items","forEach","item","index","push","id","name","snippet","title"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B,C,CAEP;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAACC,IAAAA,IAAI,EAAEJ;AAAP,GAAP;AAAA,CAAxB;;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO;AAAA,SAAK;AAChCF,IAAAA,IAAI,EAACH,gBAD2B;AAEhCM,IAAAA,QAAQ,EAAED,OAFsB;AAGhCE,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAHqB,GAAL;AAAA,CAA/B;;AAKA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,OAAO;AAAA,SAAK;AACzCF,IAAAA,IAAI,EAAEF,mBADmC;AAEzCI,IAAAA,OAAO,EAAGA;AAF+B,GAAL;AAAA,CAAjC,C,CAKP;;AACA,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACV,eAAe,EAAhB,CAAR,CADe,CACa;;AAC5B,WAAOW,GAAG,GACLC,IADE,CACG;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aAAYC,WAAW,CAACD,IAAD,CAAvB;AAAA,KADH,EAEFD,IAFE,CAEG,UAAAR,QAAQ,EAAI;AAAC;AACfM,MAAAA,QAAQ,CAACF,iBAAiB,CAACJ,QAAQ,CAAC,CAAD,CAAT,CAAlB,CAAR;AACAM,MAAAA,QAAQ,CAACR,eAAe,CAACE,QAAQ,CAACW,KAAT,CAAe,CAAf,EAAiBX,QAAQ,CAACY,MAA1B,CAAD,CAAhB,CAAR,CAFc,CAE+C;AAChE,KALE,CAAP;AAMH,GARD;AASH,CAVM;;AAWP,IAAML,GAAG,GAAG,SAANA,GAAM,QAA+B;AAAA,0BAA7BM,KAA6B;AAAA,MAA7BA,KAA6B,4BAAvB,EAAuB;AAAA,+BAAnBC,UAAmB;AAAA,MAAnBA,UAAmB,iCAAR,EAAQ;AAC1C,MAAMC,GAAG,GAAG,wCAAZ;AAEA,MAAIC,GAAG,GAAGD,GAAG,uDAA8CF,KAA9C,yBAAkEC,UAAlE,CAAb;AAEA,SAAOtB,KAAK,CAACyB,GAAN,CAAUD,GAAV,CAAP;AACA,CAND;;AAOA,IAAMN,WAAW,GAAG,SAAdA,WAAc,CAACD,IAAD,EAAU;AAC1B,MAAIS,IAAI,GAAG,EAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACCA,EAAAA,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChCN,IAAAA,IAAI,CAACO,IAAL,CAAU;AAACC,MAAAA,EAAE,EAACH,IAAI,CAACG,EAAT;AAAYC,MAAAA,IAAI,EAACJ,IAAI,CAACK,OAAL,CAAaC;AAA9B,KAAV;AACH,GAFD;AAGA,SAAOX,IAAP;AACJ,CAPD;;AASA,IAAML,KAAK,GAAG,yCAAd;AACA,IAAMC,UAAU,GAAG,EAAnB","sourcesContent":["// action type\nimport axios from \"axios\";\nexport const REQUEST_CONTENTS = \"REQUEST_CONTENTS\";\nexport const RECEIVE_CONTENTS = \"RECEIVE_CONTENTS\";\nexport const CHANGE_FULL_CONTENT = \"CHANGE_FULL_CONTENT\";\n\n// active creator(액션 생성자)\nconst requestContents = () => ({type: REQUEST_CONTENTS})\nconst receiveContents = content => ({\n    type:RECEIVE_CONTENTS, \n    contents: content,\n    receiveAt: Date.now()\n});\nexport const changeFullContent = content => ({\n    type: CHANGE_FULL_CONTENT,\n    content : content\n});\n\n//비도기 action(async action)\nexport const fetchContents = () => {\n    return dispatch => {\n        dispatch(requestContents());//디스패치로 액션함수를 실행시키는것\n        return API()\n            .then(({data}) => setContents(data))\n            .then(contents => {//then->비동기함수가 끝나고나서 바로 실행시키는것.순차적으로.\n                dispatch(changeFullContent(contents[0]));\n                dispatch(receiveContents(contents.slice(1,contents.length)));//액션을 실행시키려면 무조건 디스패치를 실행시켜야함.기존의 셋스테이트랑 비슷.변경된 사항을 스토어에 보내주는것 receiveContents\n            });\n    };\n};\nconst API = ({token=\"\", maxResults=30}) => {\n\tconst URL = \"https://www.googleapis.com/youtube/v3/\"\n\n\tlet api = URL+`videos?part=snippet&chart=mostPopular&key=${token}&maxResults=${maxResults}`\n\n\treturn axios.get(api)\n};\nconst setContents = (data) => { \n    let list = []\n    console.log(data)\n     data.items.forEach((item, index) => {\n         list.push({id:item.id,name:item.snippet.title})\n     })\n     return list\n};\n\nconst token = 'AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg';\nconst maxResults = 30;"]},"metadata":{},"sourceType":"module"}