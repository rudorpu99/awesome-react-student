{"map":"{\"version\":3,\"sources\":[\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/logo.svg\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/component/navbar/Navbar.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/component/content/Content.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/component/contentList/ContentList.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/component/fullcontent/FullContent.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/actions.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/container/MainView.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/component/contentView/ContentView.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/container/Search.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/App.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/serviceWorker.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/reducers.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/configureStore.js\",\"/Users/JYP/Desktop/react-study/awesome-react-student/5week/class/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Navbar\",\"react_default\",\"a\",\"createElement\",\"className\",\"href\",\"type\",\"data-toggle\",\"data-target\",\"aria-controls\",\"aria-expanded\",\"aria-label\",\"id\",\"NavLink\",\"activeClassName\",\"exact\",\"to\",\"Component\",\"ContentView\",\"props\",\"url\",\"children\",\"FullContentLink\",\"onClick\",\"onChangeFullContent\",\"Content\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onHover\",\"setState\",\"isShow\",\"onUnHover\",\"content\",\"displayImg\",\"imgSrc\",\"src\",\"state\",\"name\",\"_this2\",\"onMouseEnter\",\"onMouseLeave\",\"Content_FullContentLink\",\"Content_ContentView\",\"ContentList\",\"console\",\"log\",\"contents\",\"count\",\"Math\",\"ceil\",\"length\",\"component\",\"i\",\"dataPerRow\",\"slice\",\"push\",\"map\",\"item\",\"index\",\"key\",\"component_content_Content\",\"listRender\",\"FullContent\",\"frameBorder\",\"allowFullScreen\",\"allow\",\"REQUEST_CONTENTS\",\"RECEIVE_CONTENTS\",\"REMOVE_CONTENTS\",\"CHANGE_FULL_CONTENT\",\"CHANGE_KEYWORD\",\"requestContents\",\"receiveContents\",\"receiveAt\",\"Date\",\"now\",\"changeFullContent\",\"API\",\"_ref3\",\"_ref3$keyword\",\"keyword\",\"_ref3$token\",\"token\",\"_ref3$maxResults\",\"maxResults\",\"URL\",\"api\",\"concat\",\"axios\",\"get\",\"setContents\",\"data\",\"list\",\"items\",\"forEach\",\"snippet\",\"title\",\"setSearchContents\",\"videoId\",\"MainView\",\"handleFullContentChange\",\"changeViewContent\",\"fetchContents\",\"removeContents\",\"component_fullcontent_FullContent\",\"currentViewContent\",\"component_contentList_ContentList\",\"connect\",\"contentsByYoutube\",\"selectedContent\",\"isFetching\",\"lastUpdated\",\"viewContent\",\"dispatch\",\"then\",\"_ref\",\"catch\",\"e\",\"width\",\"height\",\"match\",\"params\",\"Search\",\"handleInputChange\",\"target\",\"value\",\"handleSubmit\",\"changeKeyword\",\"preventDefault\",\"prevProps\",\"fetchSearchContent\",\"onSubmit\",\"onChange\",\"placeHolder\",\"selectedKeyword\",\"_ref2\",\"Main\",\"Switch\",\"Route\",\"path\",\"App\",\"component_navbar_Navbar\",\"App_Main\",\"Boolean\",\"window\",\"location\",\"hostname\",\"initialState\",\"rootReducer\",\"combineReducers\",\"arguments\",\"undefined\",\"action\",\"assign\",\"lasetUpdated\",\"receivedAt\",\"createStoreWithMiddleware\",\"applyMiddleware\",\"thunk\",\"createStore\",\"ReactDOM\",\"render\",\"es\",\"store\",\"BrowserRouter\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport { Link, NavLink } from 'react-router-dom';//화면 이동을 위해 Link를 react-router-dom에서 불러옴\\nimport './Navbar.css';\\n\\n//상단 메뉴를 가지고 있는 컴포넌트\\nclass Navbar extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n       <nav className=\\\"navbar navbar-expand-lg navbar-dark bg-dark-trans \\\">\\n\\t\\t  <a className=\\\"navbar-brand logo\\\" href=\\\"#\\\">YOUFLIX</a>\\n\\t\\t  <button className=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\t\\t    <span className=\\\"navbar-toggler-icon\\\"></span>\\n\\t\\t  </button>\\n\\n\\t\\t  <div className=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\t\\t    <ul className=\\\"navbar-nav mr-auto\\\">\\n\\t\\t      <li className=\\\"nav-item\\\">\\n\\t\\t        {/* \\n\\t\\t\\t\\t\\tLink 컴포넌트를 이용해 url을 \\\"/\\\"로 변경하고 홈 화면을 렌더링\\n\\t\\t        */}\\n\\t\\t        <NavLink activeClassName=\\\"active\\\" exact className=\\\"nav-link\\\" to=\\\"/\\\">Home</NavLink>\\n\\n\\t\\t      </li>\\n\\t\\t       <li className=\\\"nav-item\\\">\\n\\t\\t        {/* \\n\\t\\t\\t\\t\\tLink 컴포넌트를 이용해 url을 \\\"/\\\"로 변경하고 홈 화면을 렌더링\\n\\t\\t        */}\\n\\t\\t        <NavLink activeClassName=\\\"active\\\" className=\\\"nav-link\\\" to=\\\"/search\\\">Search</NavLink>\\n\\n\\t\\t      </li>\\n\\t\\t    </ul>\\n\\t\\t  </div>\\n\\t\\t</nav>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Navbar;\\n\",\"import React, { Component } from 'react';\\nimport { NavLink } from 'react-router-dom';\\nimport \\\"./Content.css\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nconst ContentView = (props) => {\\n      let url = \\\"/view/\\\"+props.id\\n      return (<NavLink to={url}>\\n                {props.children}\\n              </NavLink>)\\n    }\\n\\nconst FullContentLink = (props) => {\\n    return (<a onClick={props.onChangeFullContent}>\\n              {props.children}\\n            </a>)\\n    }\\n\\nclass Content extends Component {\\n\\tconstructor(props) {\\n\\t  super(props);\\n\\n\\t  this.state = {\\n\\t  \\tisShow: false\\n\\t  };\\n\\t}\\n\\n\\tonHover = () => {\\n\\t\\tthis.setState({isShow:true})\\n\\t}\\n\\n\\tonUnHover = () => {\\n\\t\\tthis.setState({isShow:false})\\n\\t}\\n\\n  onChangeFullContent = () => {\\n    this.props.onClick(this.props.content)\\n  }\\n\\n  displayImg = () => {\\n    let imgSrc = \\\"https://img.youtube.com/vi/\\\"+this.props.content.id+\\\"/0.jpg\\\"\\n    let imgComponent = (<div><img className=\\\"thumbnail\\\" src={imgSrc} />{this.state.isShow?(<div className=\\\"middle\\\"><div className=\\\"text\\\"> {this.props.content.name} </div></div>):\\\"\\\"}</div>);\\n \\n    return imgComponent\\n  }\\n\\n\\n  render() {\\n    return (\\n      <div className=\\\"content\\\" onMouseEnter={() => this.onHover()} onMouseLeave={() => this.onUnHover()}>\\n      {this.props.onClick?\\n        (<FullContentLink onChangeFullContent={this.onChangeFullContent}>{this.displayImg()}</FullContentLink>):\\n        (<ContentView id={this.props.content.id}>{this.displayImg()}</ContentView>)}\\n      </div>\\n    );\\n  }\\n}\\nContent.propTypes = {\\n  onClick : PropTypes.func,\\n  content: PropTypes.object\\n}\\n\\nexport default Content;\\n\",\"import React, { Component } from 'react';\\nimport './ContentList.css';\\nimport Content from \\\"../content/Content.js\\\"\\nimport PropTypes from \\\"prop-types\\\";\\n\\n//콘텐츠의 리스트를 보여주는 컴포넌트\\nclass ContentList extends Component {\\n\\n  //한줄에 4개의 콘텐츠를 출력 하기 위해서 컴포넌트를 구성해주는 함수\\n  listRender() {\\n    console.log(this.props.contents)\\n  \\tvar count = Math.ceil(this.props.contents.length/4)//현재 콘텐츠를 한줄에 4개씩 보여주면 몇줄이 나오는지를 구함\\n  \\tlet component = [] //컴포넌트를 담을 배열 선언\\n  \\tfor(let i =0;i<count;i++) {//반복문을 이용해서 한줄씩 컴포넌트를 만들어줌\\n  \\t\\tlet dataPerRow = this.props.contents.slice(i*4,i*4+4)//slice를 이용해서 그 줄에 들어가야 하는 데이터를 반환받음\\n                                                    //현재줄*4번째 부터 현재줄*4+4 하면 0번째 줄일때는 0부터 3까지\\n                                                    //1번째 줄일때는 4부터 7까지의 데이터를 불러온다.\\n\\n      //위에서 선언한 배열에 한줄을 구성하는 컴포넌트를 push한다.\\n      //push는 배열의 맨뒤에 데이터를 넣을때 사용 하는 함수이다.\\n      //이런 식으로 컴포넌트를 추가 가능한 이유는 첫번째 시간에 말했던것 처럼 jsx는 결국 js를 좀더 편리하게 보여주는 역할일뿐\\n      //결국 jsx가 읽혀질때는 xml형태의 js로 변환되기 때문이다.\\n  \\t\\tcomponent.push(\\n        // row는 부트스트랩에서 한줄을 의미 하는 class이다.\\n  \\t\\t\\t<div className=\\\"row\\\">\\n  \\t\\t\\t\\t{\\n            //위에서 4개의 데이터를 뽑아서 저장해 가지고 있던 배열을 map을 이용해서 4개의 콘텐츠를 그려준다.\\n  \\t\\t\\t\\t\\tdataPerRow.map((item,index) => {\\n\\t\\t\\t      \\t\\treturn (\\n                  // 반복문 안에서 jsx를 사용할때는 반드시 key를 써줘야 한다.\\n                  // col-md-3은 한 줄을 12등분 했을때 3칸만큼을 차지 하겠다는 의미이다.\\n\\t\\t\\t      \\t\\t  <div className=\\\"col-md-3\\\" key={index}>\\n\\t\\t\\t\\t\\t      \\t  {/* \\n                      콘텐츠를 표현해주는 content component를 선언하는데 이때 onClick이벤트를 props로 넘겨준다.\\n                      이 이벤트는 콘텐츠를 눌렀을때 상단의 실행되는 플레이어를 변경하는 이벤트 이다.\\n                    */}\\n                    <Content content={item} onClick={this.props.onClick}/>\\n\\t\\t\\t\\t\\t        </div>\\n\\t\\t\\t      \\t\\t)\\n\\t\\t\\t      \\t})\\n  \\t\\t\\t\\t}\\n  \\t\\t\\t</div>\\n  \\t\\t)\\n  \\t}\\n\\n  \\treturn component\\n  }\\t\\n  render() {\\n  \\t\\n\\n    return (\\n      <div className=\\\"contentList align-items-center justify-content-center\\\">\\n\\t      {/*\\n          리스트를 렌더링해주는 함수를 실행 시킨다.\\n        */}\\n        {this.listRender()}\\n      </div>\\n    );\\n  }\\n}\\n\\nContentList.propTypes = {\\n  contents: PropTypes.array,\\n  onClick: PropTypes.func\\n}\\n\\nexport default ContentList;\\n\",\"import React, { Component } from 'react';\\nimport \\\"./FullContent.css\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\n//홈화면에서 영상을 실행시키는 컴포넌트\\nclass FullContent extends Component {\\n  render() { \\n    return (\\n      <div className=\\\"FullContent\\\">\\n      \\t{/*\\n          유튜브를 실행 시키기 위해서는 iframe을 사용해야 하는데, 유튜브 api로 실행 시킬 주소를 받아와서 \\n          iframe으로 실행 시킨다.\\n        */}\\n        <iframe\\n      \\t\\tclassName=\\\"my-iframe\\\"\\n      \\t\\tframeBorder=\\\"0\\\"\\n      \\t\\tsrc={\\\"https://www.youtube.com/embed/\\\"+this.props.content.id+\\\"?autoplay=1&rel=0\\\"}\\n      \\t\\tallowFullScreen={true}\\n      \\t\\tallow=\\\"autoplay\\\"\\n      \\t\\t/>\\n      </div>\\n    );\\n  }\\n}\\n\\nFullContent.propTypes = {\\n  content: PropTypes.object\\n}\\n\\nexport default FullContent;\\n\",\"import axios from \\\"axios\\\";\\n\\n//action type\\nexport const REQUEST_CONTENTS = \\\"REQUEST_CONTENTS\\\";\\nexport const RECEIVE_CONTENTS = \\\"RECEIVE_CONTENTS\\\";\\nexport const REMOVE_CONTENTS = \\\"REMOVE_CONTENTS\\\";\\nexport const CHANGE_FULL_CONTENT = \\\"CHANGE_FULL_CONTENT\\\";\\nexport const CHANGE_KEYWORD = \\\"CHANGE_KEYWORD\\\";\\n\\n//액션생성자(action creator)\\n//어떤 데이터를 변경할 건지를 정의 하는 부분\\nconst requestContents = () => ({type: REQUEST_CONTENTS})\\nconst receiveContents = (content) => ({\\n\\ttype:RECEIVE_CONTENTS, \\n\\tcontents: content,\\n\\treceiveAt: Date.now()\\n\\t})\\n\\nexport const removeContents = () => ({\\n\\ttype:REMOVE_CONTENTS,\\n})\\n\\nexport const changeFullContent = (content) => ({\\n\\ttype: CHANGE_FULL_CONTENT,\\n\\tcontent : content\\n})\\n\\nexport const changeKeyword = (keyword) => ({\\n\\ttype: CHANGE_KEYWORD,\\n\\tkeyword\\n})\\n\\nconst token = 'AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg'\\nconst maxResults = 30\\n\\n//비동기 action creator로 유튜브로부터 데이터를 ajax통신으로 받아와서\\n//동기 action creator를 dispatch해서 데이터를 변화시킴\\nexport const fetchContents = () => {\\n\\treturn dispatch => {\\n\\t\\tdispatch(requestContents())\\n\\t\\treturn API({token,maxResults})\\n\\t\\t\\t.then(({data}) => setContents(data))\\n\\t\\t\\t.then(contents => {\\n\\t\\t\\t\\tdispatch(changeFullContent(contents[0]))\\n\\t\\t\\t\\tdispatch(receiveContents(contents.slice(1,contents.length)))\\n\\t\\t\\t})\\n\\t\\t\\t.catch(e => {\\n\\t\\t\\t\\tconsole.log(e)\\n\\t\\t\\t})\\n\\t}\\n}\\n\\n//비동기 action creator로 유튜브로부터 데이터를 ajax통신으로 받아와서\\n//동기 action creator를 dispatch해서 데이터를 변화시킴\\nexport const fetchSearchContent = (keyword) => {\\n\\treturn dispatch => {\\n\\t\\tdispatch(requestContents())\\n\\t\\treturn API({token,maxResults,keyword})\\n\\t\\t\\t.then(({data}) => setSearchContents(data))\\n\\t\\t\\t.then(contents => {\\n\\t\\t\\t\\tdispatch(receiveContents(contents))\\n\\t\\t\\t})\\n\\t\\t\\t.catch(e => {\\n\\t\\t\\t\\tconsole.log(e)\\n\\t\\t\\t})\\n\\t}\\n}\\n\\n//youtube와 ajax통신할때 공통적으로 사용하는 로직을 함수로 구현\\nconst API = ({keyword=\\\"\\\", token=\\\"\\\", maxResults=30}) => {\\n\\tconst URL = \\\"https://www.googleapis.com/youtube/v3/\\\"\\n\\n\\tif( keyword === \\\"\\\" ) {\\n\\t\\tvar api = URL+`videos?part=snippet&chart=mostPopular&key=${token}&maxResults=${maxResults}`\\n\\t} else  {\\n\\t\\tvar api = URL+`search?q=${keyword}&part=snippet&key=${token}&maxResults=${maxResults}`\\n\\t}\\n\\n\\treturn axios.get(api)\\n}\\n\\n//mainView의 화면에 들어가는 데이터를 파싱\\n const setContents = (data) => { \\n   let list = []\\n   console.log(data)\\n    data.items.forEach((item, index) => {\\n        list.push({id:item.id,name:item.snippet.title})\\n    })\\n    return list\\n  }\\n\\n//search 컴포넌트에 들어가는 데이터를 파싱\\n const setSearchContents = (data) => { \\n   let list = []\\n   console.log(data)\\n    data.items.forEach((item, index) => {\\n        list.push({id:item.id.videoId,name:item.snippet.title})\\n    })\\n    return list\\n  }\",\"import React, { Component } from 'react';\\nimport './MainView.css';\\nimport ContentList from \\\"../component/contentList/ContentList.js\\\";\\nimport FullContent from '../component/fullcontent/FullContent.js';\\nimport { connect } from 'react-redux';\\nimport { fetchContents, changeFullContent, removeContents } from \\\"../actions\\\";\\n\\nclass MainView extends Component {\\n//컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\\n  componentDidMount() {\\n    this.props.fetchContents()//mapDispatchToProps에서 선언한 유튜브데이터를 불러오는 액션\\n  }\\n\\n//컴포넌트 종료시 contents 초기화\\n  componentWillUnmount() {\\n    this.props.removeContents()//mapDispatchToProps에서 선언한 contents를 초기화하는 액션\\n  }\\n\\n//메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\\n//이 함수를 이용해서 영상을 변경 한다.\\n  handleFullContentChange = (content) => {\\n    this.props.changeViewContent(content)//mapDispatchToProps에서 선언한 viewContent를 변환하는 액션\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"mainView\\\">\\n      \\t{/*\\n\\t\\t\\t영상을 실행 시키는 컴포넌트 \\n         redux로 부터 받은 currentViewContent를 props로 사용\\n      \\t*/}\\n      \\t<FullContent content={this.props.currentViewContent}/>\\n      \\t{/*\\n\\t\\t\\t실행할 영상 리스트를 출력하는 컴포넌트\\n        redux로 부터 받은 contents를 props로 사용\\n      \\t*/}\\n       \\t<ContentList contents={this.props.contents} onClick={this.handleFullContentChange} />\\n      </div>\\n    );\\n  }\\n}\\n\\n//store의 state를 컴포넌트의 props로 전달 시켜줌\\nconst mapStateToProps = (state) => {\\n  //store는 state를 리듀서 단위로 가지고 있어서 각각의 리듀서를 불러와서\\n  //컴포넌트에 props로 전달할 값들을 뽑아낸다.\\n  const { contentsByYoutube, selectedContent } = state\\n  const {\\n    isFetching,\\n    lastUpdated,\\n    items: contents,\\n  } = contentsByYoutube\\n\\n  const { \\n    viewContent: currentViewContent\\n  } = selectedContent\\n\\n  return {\\n    isFetching,\\n    contents,\\n    lastUpdated,\\n    currentViewContent\\n  }\\n}\\n\\n//action을 미리 dispatch해서 컴포넌트의 props로 전달 해주는 함수\\nconst mapDispatchToProps = dispatch => ({\\n  fetchContents: () => dispatch(fetchContents()),\\n  changeViewContent: (content) => dispatch(changeFullContent(content)),\\n  removeContents : () => dispatch(removeContents())\\n});\\n\\n//connect함수를 이용해 container component와 redux를 연결\\n//connect함수는 컴포넌트의 props와 store의 데이터를 연결 시켜주는 함수를 리턴\\n//mapStateToProps, MapDispatchToProps는 connect함수의 인자로 따로 선언해줘야 함\\nexport default connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(MainView);\\n\",\"import React, { Component } from 'react';\\nimport \\\"./ContentView.css\\\";\\n\\n//영상 리스트를 눌렀을때 플레이어 화면만 보여주고 싶을때 사용하는 컴포넌트\\nclass ContentView extends Component {\\n  render() {\\n\\n    return (\\n      <div className=\\\"ContentView\\\">\\n        {/*\\n          유튜브를 실행 시키기 위해서는 iframe을 사용해야 하는데, 유튜브 api로 실행 시킬 주소를 받아와서 \\n          iframe으로 실행 시킨다.\\n        */}\\n       \\t<iframe\\n       \\t\\tclassName=\\\"content-view-iframe\\\"\\n      \\t\\tframeBorder=\\\"0\\\"\\n      \\t\\twidth=\\\"100%\\\" height=\\\"100vw\\\"\\n      \\t\\tsrc={\\\"https://www.youtube.com/embed/\\\"+this.props.match.params.id}\\n      \\t\\tallowFullScreen={true}\\n      \\t\\tallow=\\\"autoplay; encrypted-meida\\\"\\n      \\t\\t/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ContentView;\\n\",\"import React , { Component } from 'react'\\nimport ContentList from \\\"../component/contentList/ContentList.js\\\"\\nimport { connect } from \\\"react-redux\\\"\\nimport { fetchSearchContent,changeKeyword } from \\\"../actions\\\"\\n\\nclass Search extends Component {\\n\\tconstructor(props) {\\n\\t  super(props);\\n    //keyword를 입력받기 위한 state\\n\\t  this.state = {\\n\\t  \\tkeyword: \\\"\\\"\\n\\t  };\\n\\t}\\n\\n\\thandleInputChange = (e) => {\\n    \\tthis.setState({keyword:e.target.value})\\n  }\\n\\n  //입력받은 키워드를 submit할때 redux에서 관리하는 keyword로 \\n  //state.keyword를 전달\\n  handleSubmit = (e) => {\\n    this.props.changeKeyword(this.state.keyword)\\n    e.preventDefault();\\n  }\\n\\n\\n  //redux에 의해서 props.keyword가 업데이트 되면\\n  //키워드로 유튜브의 동영상을 검색하는 액션 실행\\n  componentDidUpdate(prevProps) {\\n    if(this.props.keyword !== prevProps.keyword) {\\n      this.props.fetchSearchContent(this.props.keyword)\\n    }\\n  }\\n\\n\\trender() {\\n\\t\\treturn (\\n\\t\\t\\t<div className=\\\"Search\\\">\\n            <form className=\\\"\\\" onSubmit={this.handleSubmit}>\\n              <div className=\\\"form-group row align-items-center justify-content-center\\\">\\n                <div className=\\\"col-md-3\\\">\\n                  <label>검색</label>\\n                  <input type=\\\"text\\\" value={this.state.keyword} onChange={this.handleInputChange} className=\\\"form-control keyword\\\" placeHolder=\\\"Seacrh...\\\"/>\\n                </div>\\n              </div>\\n            </form>\\n\\n            <ContentList contents={this.props.contents} />\\n          </div>\\t\\t\\n\\t    )\\n\\t}\\n}\\n//store의 state를 컴포넌트의 props로 전달 시켜줌\\nconst mapStateToProps = state => {\\n  //store는 state를 리듀서 단위로 가지고 있어서 각각의 리듀서를 불러와서\\n  //컴포넌트에 props로 전달할 값들을 뽑아낸다.\\n  const { contentsByYoutube, selectedKeyword } = state\\n  const { keyword } = selectedKeyword\\n  const {\\n    isFetching,\\n    lastUpdated,\\n    items: contents,\\n  } = contentsByYoutube\\n\\n  return {\\n    keyword,\\n    isFetching,\\n    lastUpdated,\\n    contents\\n  }\\n}\\n\\n//action을 미리 dispatch해서 컴포넌트의 props로 전달 해주는 함수\\nconst mapDispatchToProps = dispatch => ({\\n  changeKeyword:(keyword) => dispatch(changeKeyword(keyword)),\\n  fetchSearchContent: (keyword) => dispatch(fetchSearchContent(keyword))\\n});\\n\\n//connect함수를 이용해 container component와 redux를 연결\\n//connect함수는 컴포넌트의 props와 store의 데이터를 연결 시켜주는 함수를 리턴\\n//mapStateToProps, MapDispatchToProps는 connect함수의 인자로 따로 선언해줘야 함\\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport 'bootstrap/dist/css/bootstrap.min.css';//bootstrap css를 사용하기 위해서 불러옵니다.\\nimport Navbar from './component/navbar/Navbar.js';\\nimport MainView from './container/MainView.js';\\nimport ContentView from './component/contentView/ContentView.js';\\nimport Search from \\\"./container/Search.js\\\"\\nimport {Switch, Route } from 'react-router-dom'//router를 사용하기 위해서 react router dom 불러옵니다.\\n\\n//router를 감싸고 있는 함수형 컴포넌트\\nconst Main =()=>(//라우팅할때 url이 중복되는것을 막기 위해서 switch 사용\\n\\t\\t<Switch>\\n      {/* \\n          \\\"/\\\" 을 가지는 /serach, /view/:id로 이동을 하면 \\\"/\\\"이 포함되어있기 때문에 MainView또한 렌더링이 됩니다.\\n          이것을 막기 위해서 exact속성을 추가 합니다.\\n      */}\\n\\t\\t\\t<Route exact path=\\\"/\\\" component={MainView}></Route>\\n      {/*\\n          \\\"/view/:id\\\"에 url이 이동했을때 ContentView 컴포넌트를 렌더링합니다.\\n          여기에서 \\\":id\\\" 이 부분은 url에 변화가 필요할때 사용하는 방식 입니다.\\n          \\\":이름\\\"\\\" 이렇게 설정하면 url을 /view/123, /view/555 라고 해도 ContetnView 컴포넌트를 렌더링하게됩니다.\\n      */}\\n\\t\\t\\t<Route  path=\\\"/view/:id\\\" component={ContentView}></Route>\\n\\n      <Route path=\\\"/search\\\" component={Search}></Route>\\n\\t\\t</Switch>\\n\\t)\\n\\nclass App extends Component {\\n  render() { \\n    return (\\n      <div className=\\\"App\\\">\\n        {/* 네이게이션바 컴포넌트*/}\\n        <Navbar />\\n        {/* 라우터를 가지고 있는 컴포넌트*/}\\n        <Main />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import { combineReducers } from \\\"redux\\\";\\nimport { REQUEST_CONTENTS, RECEIVE_CONTENTS,\\n\\t\\tCHANGE_FULL_CONTENT, CHANGE_KEYWORD,\\n\\t\\tREMOVE_CONTENTS } from \\\"./actions\\\";\\n\\nfunction selectedKeyword(state = {\\n\\tkeyword: \\\"\\\"\\n}, action) {\\n\\tswitch(action.type) {\\n\\t\\tcase CHANGE_KEYWORD:\\n\\t\\t\\treturn Object.assign({}, state, {\\n\\t\\t\\t\\tkeyword:action.keyword\\n\\t\\t\\t})\\n\\t\\tdefault:\\n\\t\\t\\treturn state\\n\\t}\\n} \\n\\nfunction selectedContent(state = {\\n\\tviewContent: {}\\n}, action ) {\\n\\tswitch(action.type) {\\n\\t\\tcase CHANGE_FULL_CONTENT:\\n\\t\\t\\treturn Object.assign({}, state, {\\n\\t\\t\\t\\tviewContent: action.content\\n\\t\\t\\t})\\n\\t\\tdefault:\\n\\t\\t\\treturn state\\n\\t}\\n}\\n\\nfunction contentsByYoutube(state = {\\n\\tisFetching:false,\\n\\titems: []\\n\\t}, action) {\\n\\n\\tswitch(action.type) {\\n\\t\\tcase REQUEST_CONTENTS:\\n\\t\\t\\treturn Object.assign({}, state, {\\n\\t\\t\\t\\tisFetching: true\\n\\t\\t\\t})\\n\\t\\tcase RECEIVE_CONTENTS:\\n\\t\\t\\treturn Object.assign({}, state, {\\n\\t\\t\\t\\tisFetching: false,\\n\\t\\t\\t\\titems: action.contents,\\n\\t\\t\\t\\tlasetUpdated: action.receivedAt\\n\\t\\t\\t})\\n\\t\\tcase REMOVE_CONTENTS:\\n\\t\\t\\treturn Object.assign({}, state, {\\n\\t\\t\\t\\titems: []\\n\\t\\t\\t})\\n\\t\\tdefault:\\n\\t\\t\\treturn state\\n\\t}\\n}\\n\\n\\n\\nconst rootReducer = combineReducers({\\n\\tcontentsByYoutube,\\n\\tselectedContent,\\n\\tselectedKeyword\\n});\\n\\nexport default rootReducer;\\n\",\"import { createStore, applyMiddleware } from \\\"redux\\\";\\nimport thunk from \\\"redux-thunk\\\";\\nimport rootReducer from \\\"./reducers\\\";\\n\\nconst createStoreWithMiddleware = applyMiddleware(\\n\\tthunk\\n\\t)(createStore);\\n\\n\\nexport default function configureStore(initialState) {\\n\\treturn createStoreWithMiddleware(rootReducer, initialState);\\n}\\n\\n\\n\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport { BrowserRouter } from 'react-router-dom';\\nimport * as serviceWorker from './serviceWorker';\\nimport { Provider } from 'react-redux';\\nimport configureStore from './configureStore';\\n\\nReactDOM.render((\\n\\t//redux와 react를 연결하기 위해서 Provider로 최상위 컴포넌트를 감싸야함\\n\\t//react에 store객체를 전달해서 redux를 사용할수 있게 함\\n\\t<Provider store={configureStore()}>\\n\\t{/*모든 컴포넌트에서 react router가 동작하기 위해서는 최상위 컴포넌트를 \\n\\tBrwoserRouter로 감싸야함*/}\\n\\t\\t<BrowserRouter>\\n\\t\\t\\t<App />\\n\\t\\t</BrowserRouter>\\n\\t</Provider>\\n\\t\\t),document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{31:function(e,t,n){e.exports=n(80)},36:function(e,t,n){},38:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},39:function(e,t,n){},43:function(e,t,n){},48:function(e,t,n){},50:function(e,t,n){},52:function(e,t,n){},54:function(e,t,n){},78:function(e,t,n){},80:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(26),c=n.n(r),i=(n(36),n(4)),s=n(5),l=n(7),u=n(6),m=n(8),p=(n(38),n(39),n(41),n(83)),d=(n(43),function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"nav\",{className:\"navbar navbar-expand-lg navbar-dark bg-dark-trans \"},o.a.createElement(\"a\",{className:\"navbar-brand logo\",href:\"#\"},\"YOUFLIX\"),o.a.createElement(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-toggle\":\"collapse\",\"data-target\":\"#navbarSupportedContent\",\"aria-controls\":\"navbarSupportedContent\",\"aria-expanded\":\"false\",\"aria-label\":\"Toggle navigation\"},o.a.createElement(\"span\",{className:\"navbar-toggler-icon\"})),o.a.createElement(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarSupportedContent\"},o.a.createElement(\"ul\",{className:\"navbar-nav mr-auto\"},o.a.createElement(\"li\",{className:\"nav-item\"},o.a.createElement(p.a,{activeClassName:\"active\",exact:!0,className:\"nav-link\",to:\"/\"},\"Home\")),o.a.createElement(\"li\",{className:\"nav-item\"},o.a.createElement(p.a,{activeClassName:\"active\",className:\"nav-link\",to:\"/search\"},\"Search\"))))))}}]),t}(a.Component)),h=(n(48),n(50),n(52),function(e){var t=\"/view/\"+e.id;return o.a.createElement(p.a,{to:t},e.children)}),f=function(e){return o.a.createElement(\"a\",{onClick:e.onChangeFullContent},e.children)},v=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).onHover=function(){n.setState({isShow:!0})},n.onUnHover=function(){n.setState({isShow:!1})},n.onChangeFullContent=function(){n.props.onClick(n.props.content)},n.displayImg=function(){var e=\"https://img.youtube.com/vi/\"+n.props.content.id+\"/0.jpg\";return o.a.createElement(\"div\",null,o.a.createElement(\"img\",{className:\"thumbnail\",src:e}),n.state.isShow?o.a.createElement(\"div\",{className:\"middle\"},o.a.createElement(\"div\",{className:\"text\"},\" \",n.props.content.name,\" \")):\"\")},n.state={isShow:!1},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){var e=this;return o.a.createElement(\"div\",{className:\"content\",onMouseEnter:function(){return e.onHover()},onMouseLeave:function(){return e.onUnHover()}},this.props.onClick?o.a.createElement(f,{onChangeFullContent:this.onChangeFullContent},this.displayImg()):o.a.createElement(h,{id:this.props.content.id},this.displayImg()))}}]),t}(a.Component),b=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"listRender\",value:function(){var e=this;console.log(this.props.contents);for(var t=Math.ceil(this.props.contents.length/4),n=[],a=0;a<t;a++){var r=this.props.contents.slice(4*a,4*a+4);n.push(o.a.createElement(\"div\",{className:\"row\"},r.map(function(t,n){return o.a.createElement(\"div\",{className:\"col-md-3\",key:n},o.a.createElement(v,{content:t,onClick:e.props.onClick}))})))}return n}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"contentList align-items-center justify-content-center\"},this.listRender())}}]),t}(a.Component),w=(n(54),function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"FullContent\"},o.a.createElement(\"iframe\",{className:\"my-iframe\",frameBorder:\"0\",src:\"https://www.youtube.com/embed/\"+this.props.content.id+\"?autoplay=1&rel=0\",allowFullScreen:!0,allow:\"autoplay\"}))}}]),t}(a.Component)),g=n(12),y=n(29),E=n.n(y),C=\"REQUEST_CONTENTS\",O=\"RECEIVE_CONTENTS\",j=\"REMOVE_CONTENTS\",k=\"CHANGE_FULL_CONTENT\",N=\"CHANGE_KEYWORD\",S=function(){return{type:C}},F=function(e){return{type:O,contents:e,receiveAt:Date.now()}},x=function(e){return{type:k,content:e}},I=function(e){var t=e.keyword,n=void 0===t?\"\":t,a=e.token,o=void 0===a?\"\":a,r=e.maxResults,c=void 0===r?30:r,i=\"https://www.googleapis.com/youtube/v3/\";if(\"\"===n)var s=i+\"videos?part=snippet&chart=mostPopular&key=\".concat(o,\"&maxResults=\").concat(c);else s=i+\"search?q=\".concat(n,\"&part=snippet&key=\").concat(o,\"&maxResults=\").concat(c);return E.a.get(s)},R=function(e){var t=[];return console.log(e),e.items.forEach(function(e,n){t.push({id:e.id,name:e.snippet.title})}),t},T=function(e){var t=[];return console.log(e),e.items.forEach(function(e,n){t.push({id:e.id.videoId,name:e.snippet.title})}),t},U=function(e){function t(){var e,n;Object(i.a)(this,t);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(n=Object(l.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(o)))).handleFullContentChange=function(e){n.props.changeViewContent(e)},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"componentDidMount\",value:function(){this.props.fetchContents()}},{key:\"componentWillUnmount\",value:function(){this.props.removeContents()}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"mainView\"},o.a.createElement(w,{content:this.props.currentViewContent}),o.a.createElement(b,{contents:this.props.contents,onClick:this.handleFullContentChange}))}}]),t}(a.Component),A=Object(g.b)(function(e){var t=e.contentsByYoutube,n=e.selectedContent,a=t.isFetching,o=t.lastUpdated;return{isFetching:a,contents:t.items,lastUpdated:o,currentViewContent:n.viewContent}},function(e){return{fetchContents:function(){return e(function(e){return e(S()),I({token:\"AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg\",maxResults:30}).then(function(e){var t=e.data;return R(t)}).then(function(t){e(x(t[0])),e(F(t.slice(1,t.length)))}).catch(function(e){console.log(e)})})},changeViewContent:function(t){return e(x(t))},removeContents:function(){return e({type:j})}}})(U),H=(n(78),function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"ContentView\"},o.a.createElement(\"iframe\",{className:\"content-view-iframe\",frameBorder:\"0\",width:\"100%\",height:\"100vw\",src:\"https://www.youtube.com/embed/\"+this.props.match.params.id,allowFullScreen:!0,allow:\"autoplay; encrypted-meida\"}))}}]),t}(a.Component)),B=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleInputChange=function(e){n.setState({keyword:e.target.value})},n.handleSubmit=function(e){n.props.changeKeyword(n.state.keyword),e.preventDefault()},n.state={keyword:\"\"},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"componentDidUpdate\",value:function(e){this.props.keyword!==e.keyword&&this.props.fetchSearchContent(this.props.keyword)}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"Search\"},o.a.createElement(\"form\",{className:\"\",onSubmit:this.handleSubmit},o.a.createElement(\"div\",{className:\"form-group row align-items-center justify-content-center\"},o.a.createElement(\"div\",{className:\"col-md-3\"},o.a.createElement(\"label\",null,\"\\uac80\\uc0c9\"),o.a.createElement(\"input\",{type:\"text\",value:this.state.keyword,onChange:this.handleInputChange,className:\"form-control keyword\",placeHolder:\"Seacrh...\"})))),o.a.createElement(b,{contents:this.props.contents}))}}]),t}(a.Component),V=Object(g.b)(function(e){var t=e.contentsByYoutube;return{keyword:e.selectedKeyword.keyword,isFetching:t.isFetching,lastUpdated:t.lastUpdated,contents:t.items}},function(e){return{changeKeyword:function(t){return e(function(e){return{type:N,keyword:e}}(t))},fetchSearchContent:function(t){return e(function(e){return function(t){return t(S()),I({token:\"AIzaSyAsNDtwveKzPT0SWzREwuBpmswH18CIffg\",maxResults:30,keyword:e}).then(function(e){var t=e.data;return T(t)}).then(function(e){t(F(e))}).catch(function(e){console.log(e)})}}(t))}}})(B),D=n(84),K=n(81),z=function(){return o.a.createElement(D.a,null,o.a.createElement(K.a,{exact:!0,path:\"/\",component:A}),o.a.createElement(K.a,{path:\"/view/:id\",component:H}),o.a.createElement(K.a,{path:\"/search\",component:V}))},W=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(d,null),o.a.createElement(z,null))}}]),t}(a.Component),_=n(82);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var L=n(11),M=n(30);var Y,P=Object(L.c)({contentsByYoutube:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{isFetching:!1,items:[]},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case C:return Object.assign({},e,{isFetching:!0});case O:return Object.assign({},e,{isFetching:!1,items:t.contents,lasetUpdated:t.receivedAt});case j:return Object.assign({},e,{items:[]});default:return e}},selectedContent:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{viewContent:{}},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case k:return Object.assign({},e,{viewContent:t.content});default:return e}},selectedKeyword:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{keyword:\"\"},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case N:return Object.assign({},e,{keyword:t.keyword});default:return e}}}),G=Object(L.a)(M.a)(L.d);c.a.render(o.a.createElement(g.a,{store:G(P,Y)},o.a.createElement(_.a,null,o.a.createElement(W,null))),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[31,2,1]]]);","extractedComments":[]}